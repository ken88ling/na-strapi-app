name: Deploy Staging to AWS
on:
#  pull_request:
#    branches: [staging]
  push:
    branches: [staging]

env:
  DOCKER_IMAGE: na-strapi-app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
              
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./strapi-be/
          build-args: NODE_ENV=production
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
          
  deploy: 
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
            SERVER_HOST : ${{ secrets.SERVER_HOST }}
            DEPLOY_ENV: staging
            APP_PORT: 1338
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key && chmod 400 private_key
          scp -o StrictHostKeyChecking=no -i private_key ./strapi-be/docker-compose.yaml ./strapi-be/.env.${{ env.DEPLOY_ENV }} ubuntu@$SERVER_HOST:/home/ubuntu
          ssh -o StrictHostKeyChecking=no -i private_key ubuntu@$SERVER_HOST "
              docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} &&
              docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:latest &&
  
              docker network create na-strapi-app || true &&
              
              docker-compose down &&
              docker-compose --env-file .env.staging up -d"
   
