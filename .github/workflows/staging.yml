name: main
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#       - name: Cache node_modules
#         uses: actions/cache@v3
#         with:
#           path: ~/.npm
#           # update caches if package lock changed
#           # if failed to find key with caches then do a restore for older key
#           key: ${{ runner.os }}-node-${{ hashFiles('**/**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
            
      - name: Use NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: "14.x"
      
      - name: test
        run: |
          cat ./strapi-be/Dockerfile     
        
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./strapi-be/
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/coffee-be:latest
          
  deploy: 
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
            SERVER_HOST : ${{ secrets.SERVER_HOST  }}
            DEPLOY_ENV: staging
            APP_PORT: 1337
        run: |
          chmod 400 $SSH_PRIVATE_KEY
          scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yaml ubuntu@$SERVER_HOST:/home/ubuntu
          ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ubuntu@$SERVER_HOST "
              docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_ACCESS_TOKEN &&
              export COMPOSE_PROJECT_NAME=$DEPLOY_ENV &&
              export DC_APP_PORT=$APP_PORT &

              docker-compose down &&
              docker-compose up -d"


    

               

          
          
#       - name: Create a Release
#         if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#         run: npx semantic-release
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          
#       - name: Deploy to staging
#         if: github.event_name == 'push'
#         run: npx surge --project ./build --domain fragile-trip.surge.sh
#         env:
#           SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
#           SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
          
          
          
